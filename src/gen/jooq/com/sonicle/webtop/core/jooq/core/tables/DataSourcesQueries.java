/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.core.jooq.core.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataSourcesQueries extends org.jooq.impl.TableImpl<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.data_sources_queries</code>
     */
    public static final DataSourcesQueries DATA_SOURCES_QUERIES = new DataSourcesQueries();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord> getRecordType() {
        return com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord.class;
    }

    /**
     * The column <code>core.data_sources_queries.query_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, java.lang.String> QUERY_ID = createField(org.jooq.impl.DSL.name("query_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>core.data_sources_queries.data_source_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, java.lang.String> DATA_SOURCE_ID = createField(org.jooq.impl.DSL.name("data_source_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>core.data_sources_queries.revision_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, org.joda.time.DateTime> REVISION_TIMESTAMP = createField(org.jooq.impl.DSL.name("revision_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.data_sources_queries.name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, java.lang.String> NAME = createField(org.jooq.impl.DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.data_sources_queries.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.data_sources_queries.raw_sql</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, java.lang.String> RAW_SQL = createField(org.jooq.impl.DSL.name("raw_sql"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>core.data_sources_queries.force_pagination</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, java.lang.Boolean> FORCE_PAGINATION = createField(org.jooq.impl.DSL.name("force_pagination"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    private DataSourcesQueries(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private DataSourcesQueries(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.data_sources_queries</code> table reference
     */
    public DataSourcesQueries(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), DATA_SOURCES_QUERIES);
    }

    /**
     * Create an aliased <code>core.data_sources_queries</code> table reference
     */
    public DataSourcesQueries(org.jooq.Name alias) {
        this(alias, DATA_SOURCES_QUERIES);
    }

    /**
     * Create a <code>core.data_sources_queries</code> table reference
     */
    public DataSourcesQueries() {
        this(org.jooq.impl.DSL.name("data_sources_queries"), null);
    }

    public <O extends org.jooq.Record> DataSourcesQueries(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord> key) {
        super(child, key, DATA_SOURCES_QUERIES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.core.jooq.core.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.core.jooq.core.Indexes.DATA_SOURCES_QUERIES_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord> getPrimaryKey() {
        return com.sonicle.webtop.core.jooq.core.Keys.DATA_SOURCES_QUERIES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord>>asList(com.sonicle.webtop.core.jooq.core.Keys.DATA_SOURCES_QUERIES_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.core.jooq.core.tables.records.DataSourcesQueriesRecord, ?>>asList(com.sonicle.webtop.core.jooq.core.Keys.DATA_SOURCES_QUERIES__DATA_SOURCES_QUERIES_DATA_SOURCE_ID_FKEY, com.sonicle.webtop.core.jooq.core.Keys.DATA_SOURCES_QUERIES__DATA_SOURCES_QUERIES_DATA_SOURCE_ID_FKEY1);
    }

    private transient com.sonicle.webtop.core.jooq.core.tables.DataSources _dataSourcesQueriesDataSourceIdFkey;
    private transient com.sonicle.webtop.core.jooq.core.tables.DataSources _dataSourcesQueriesDataSourceIdFkey1;

    public com.sonicle.webtop.core.jooq.core.tables.DataSources dataSourcesQueriesDataSourceIdFkey() {
        if (_dataSourcesQueriesDataSourceIdFkey == null)
            _dataSourcesQueriesDataSourceIdFkey = new com.sonicle.webtop.core.jooq.core.tables.DataSources(this, com.sonicle.webtop.core.jooq.core.Keys.DATA_SOURCES_QUERIES__DATA_SOURCES_QUERIES_DATA_SOURCE_ID_FKEY);

        return _dataSourcesQueriesDataSourceIdFkey;
    }

    public com.sonicle.webtop.core.jooq.core.tables.DataSources dataSourcesQueriesDataSourceIdFkey1() {
        if (_dataSourcesQueriesDataSourceIdFkey1 == null)
            _dataSourcesQueriesDataSourceIdFkey1 = new com.sonicle.webtop.core.jooq.core.tables.DataSources(this, com.sonicle.webtop.core.jooq.core.Keys.DATA_SOURCES_QUERIES__DATA_SOURCES_QUERIES_DATA_SOURCE_ID_FKEY1);

        return _dataSourcesQueriesDataSourceIdFkey1;
    }

    @java.lang.Override
    public DataSourcesQueries as(java.lang.String alias) {
        return new DataSourcesQueries(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public DataSourcesQueries as(org.jooq.Name alias) {
        return new DataSourcesQueries(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public DataSourcesQueries rename(java.lang.String name) {
        return new DataSourcesQueries(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public DataSourcesQueries rename(org.jooq.Name name) {
        return new DataSourcesQueries(name, null);
    }

    // -------------------------------------------------------------------------
    // Row7 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row7<java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row7) super.fieldsRow();
    }
}
