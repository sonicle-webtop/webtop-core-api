/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.core.jooq.core.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ApiKeys extends org.jooq.impl.TableImpl<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.api_keys</code>
     */
    public static final ApiKeys API_KEYS = new ApiKeys();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord> getRecordType() {
        return com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord.class;
    }

    /**
     * The column <code>core.api_keys.api_key_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, java.lang.String> API_KEY_ID = createField(org.jooq.impl.DSL.name("api_key_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>core.api_keys.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.api_keys.creation_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, org.joda.time.DateTime> CREATION_TIMESTAMP = createField(org.jooq.impl.DSL.name("creation_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.api_keys.revision_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, org.joda.time.DateTime> REVISION_TIMESTAMP = createField(org.jooq.impl.DSL.name("revision_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.api_keys.name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, java.lang.String> NAME = createField(org.jooq.impl.DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.api_keys.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.api_keys.short_token</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, java.lang.String> SHORT_TOKEN = createField(org.jooq.impl.DSL.name("short_token"), org.jooq.impl.SQLDataType.VARCHAR(7), this, "");

    /**
     * The column <code>core.api_keys.long_token</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, java.lang.String> LONG_TOKEN = createField(org.jooq.impl.DSL.name("long_token"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.api_keys.expires_at</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, org.joda.time.DateTime> EXPIRES_AT = createField(org.jooq.impl.DSL.name("expires_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.api_keys.last_used_at</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord, org.joda.time.DateTime> LAST_USED_AT = createField(org.jooq.impl.DSL.name("last_used_at"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    private ApiKeys(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord> aliased) {
        this(alias, aliased, null);
    }

    private ApiKeys(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.api_keys</code> table reference
     */
    public ApiKeys(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), API_KEYS);
    }

    /**
     * Create an aliased <code>core.api_keys</code> table reference
     */
    public ApiKeys(org.jooq.Name alias) {
        this(alias, API_KEYS);
    }

    /**
     * Create a <code>core.api_keys</code> table reference
     */
    public ApiKeys() {
        this(org.jooq.impl.DSL.name("api_keys"), null);
    }

    public <O extends org.jooq.Record> ApiKeys(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord> key) {
        super(child, key, API_KEYS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.core.jooq.core.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.core.jooq.core.Indexes.API_KEYS_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord> getPrimaryKey() {
        return com.sonicle.webtop.core.jooq.core.Keys.API_KEYS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.core.tables.records.ApiKeysRecord>>asList(com.sonicle.webtop.core.jooq.core.Keys.API_KEYS_PKEY);
    }

    @java.lang.Override
    public ApiKeys as(java.lang.String alias) {
        return new ApiKeys(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public ApiKeys as(org.jooq.Name alias) {
        return new ApiKeys(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ApiKeys rename(java.lang.String name) {
        return new ApiKeys(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ApiKeys rename(org.jooq.Name name) {
        return new ApiKeys(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row10<java.lang.String, java.lang.String, org.joda.time.DateTime, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.joda.time.DateTime, org.joda.time.DateTime> fieldsRow() {
        return (org.jooq.Row10) super.fieldsRow();
    }
}
