/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.core.jooq.config.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FetchmailPolls extends org.jooq.impl.TableImpl<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>config.fetchmail_polls</code>
     */
    public static final FetchmailPolls FETCHMAIL_POLLS = new FetchmailPolls();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord> getRecordType() {
        return com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord.class;
    }

    /**
     * The column <code>config.fetchmail_polls.poll_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.Integer> POLL_ID = createField(org.jooq.impl.DSL.name("poll_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('config.seq_fetchmail_polls'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>config.fetchmail_polls.context</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.String> CONTEXT = createField(org.jooq.impl.DSL.name("context"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>config.fetchmail_polls.host</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.String> HOST = createField(org.jooq.impl.DSL.name("host"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>config.fetchmail_polls.port</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.Short> PORT = createField(org.jooq.impl.DSL.name("port"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>config.fetchmail_polls.protocol</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.String> PROTOCOL = createField(org.jooq.impl.DSL.name("protocol"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>config.fetchmail_polls.ssl</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.Boolean> SSL = createField(org.jooq.impl.DSL.name("ssl"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>config.fetchmail_polls.remote_user</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.String> REMOTE_USER = createField(org.jooq.impl.DSL.name("remote_user"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>config.fetchmail_polls.remote_password</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.String> REMOTE_PASSWORD = createField(org.jooq.impl.DSL.name("remote_password"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>config.fetchmail_polls.local_user</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord, java.lang.String> LOCAL_USER = createField(org.jooq.impl.DSL.name("local_user"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    private FetchmailPolls(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord> aliased) {
        this(alias, aliased, null);
    }

    private FetchmailPolls(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>config.fetchmail_polls</code> table reference
     */
    public FetchmailPolls(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), FETCHMAIL_POLLS);
    }

    /**
     * Create an aliased <code>config.fetchmail_polls</code> table reference
     */
    public FetchmailPolls(org.jooq.Name alias) {
        this(alias, FETCHMAIL_POLLS);
    }

    /**
     * Create a <code>config.fetchmail_polls</code> table reference
     */
    public FetchmailPolls() {
        this(org.jooq.impl.DSL.name("fetchmail_polls"), null);
    }

    public <O extends org.jooq.Record> FetchmailPolls(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord> key) {
        super(child, key, FETCHMAIL_POLLS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.core.jooq.config.Config.CONFIG;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.core.jooq.config.Indexes.FETCHMAIL_POLLS_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord> getPrimaryKey() {
        return com.sonicle.webtop.core.jooq.config.Keys.FETCHMAIL_POLLS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.core.jooq.config.tables.records.FetchmailPollsRecord>>asList(com.sonicle.webtop.core.jooq.config.Keys.FETCHMAIL_POLLS_PKEY);
    }

    @java.lang.Override
    public FetchmailPolls as(java.lang.String alias) {
        return new FetchmailPolls(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public FetchmailPolls as(org.jooq.Name alias) {
        return new FetchmailPolls(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public FetchmailPolls rename(java.lang.String name) {
        return new FetchmailPolls(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public FetchmailPolls rename(org.jooq.Name name) {
        return new FetchmailPolls(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Short, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row9) super.fieldsRow();
    }
}
