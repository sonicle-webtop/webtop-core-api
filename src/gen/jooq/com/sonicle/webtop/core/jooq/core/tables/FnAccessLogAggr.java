/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.core.jooq.core.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FnAccessLogAggr extends org.jooq.impl.TableImpl<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.fn_access_log_aggr</code>
     */
    public static final FnAccessLogAggr FN_ACCESS_LOG_AGGR = new FnAccessLogAggr();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord> getRecordType() {
        return com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord.class;
    }

    /**
     * The column <code>core.fn_access_log_aggr.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>core.fn_access_log_aggr.session_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.String> SESSION_ID = createField(org.jooq.impl.DSL.name("session_id"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>core.fn_access_log_aggr.timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, org.joda.time.DateTime> TIMESTAMP = createField(org.jooq.impl.DSL.name("timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE, this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.fn_access_log_aggr.duration</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.Integer> DURATION = createField(org.jooq.impl.DSL.name("duration"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>core.fn_access_log_aggr.authenticated</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.Boolean> AUTHENTICATED = createField(org.jooq.impl.DSL.name("authenticated"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>core.fn_access_log_aggr.failure</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.Boolean> FAILURE = createField(org.jooq.impl.DSL.name("failure"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>core.fn_access_log_aggr.login_errors</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.Integer> LOGIN_ERRORS = createField(org.jooq.impl.DSL.name("login_errors"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>core.fn_access_log_aggr.data</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord, java.lang.String> DATA = createField(org.jooq.impl.DSL.name("data"), org.jooq.impl.SQLDataType.VARCHAR, this, "");

    private FnAccessLogAggr(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord> aliased) {
        this(alias, aliased, new org.jooq.Field[3]);
    }

    private FnAccessLogAggr(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.core.jooq.core.tables.records.FnAccessLogAggrRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.function());
    }

    /**
     * Create an aliased <code>core.fn_access_log_aggr</code> table reference
     */
    public FnAccessLogAggr(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), FN_ACCESS_LOG_AGGR);
    }

    /**
     * Create an aliased <code>core.fn_access_log_aggr</code> table reference
     */
    public FnAccessLogAggr(org.jooq.Name alias) {
        this(alias, FN_ACCESS_LOG_AGGR);
    }

    /**
     * Create a <code>core.fn_access_log_aggr</code> table reference
     */
    public FnAccessLogAggr() {
        this(org.jooq.impl.DSL.name("fn_access_log_aggr"), null);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.core.jooq.core.Core.CORE;
    }

    @java.lang.Override
    public FnAccessLogAggr as(java.lang.String alias) {
        return new FnAccessLogAggr(org.jooq.impl.DSL.name(alias), this, parameters);
    }

    @java.lang.Override
    public FnAccessLogAggr as(org.jooq.Name alias) {
        return new FnAccessLogAggr(alias, this, parameters);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public FnAccessLogAggr rename(java.lang.String name) {
        return new FnAccessLogAggr(org.jooq.impl.DSL.name(name), null, parameters);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public FnAccessLogAggr rename(org.jooq.Name name) {
        return new FnAccessLogAggr(name, null, parameters);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row8<java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.Integer, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.String> fieldsRow() {
        return (org.jooq.Row8) super.fieldsRow();
    }

    /**
     * Call this table-valued function
     */
    public FnAccessLogAggr call(
          java.lang.String domainId
        , org.joda.time.DateTime fromDate
        , org.joda.time.DateTime toDate
    ) {
        FnAccessLogAggr result = new FnAccessLogAggr(org.jooq.impl.DSL.name("fn_access_log_aggr"), null, new org.jooq.Field[] {
              org.jooq.impl.DSL.val(domainId, org.jooq.impl.SQLDataType.VARCHAR)
            , org.jooq.impl.DSL.val(fromDate, org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).asConvertedDataType(new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter()))
            , org.jooq.impl.DSL.val(toDate, org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).asConvertedDataType(new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter()))
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }

    /**
     * Call this table-valued function
     */
    public FnAccessLogAggr call(
          org.jooq.Field<java.lang.String> domainId
        , org.jooq.Field<org.joda.time.DateTime> fromDate
        , org.jooq.Field<org.joda.time.DateTime> toDate
    ) {
        FnAccessLogAggr result = new FnAccessLogAggr(org.jooq.impl.DSL.name("fn_access_log_aggr"), null, new org.jooq.Field[] {
              domainId
            , fromDate
            , toDate
        });

        return aliased() ? result.as(getUnqualifiedName()) : result;
    }
}
