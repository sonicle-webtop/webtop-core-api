/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.core.jooq.config.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FetchmailPollsRecord extends org.jooq.impl.UpdatableRecordImpl<FetchmailPollsRecord> implements org.jooq.Record9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Short, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>config.fetchmail_polls.poll_id</code>.
     */
    public void setPollId(java.lang.Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.poll_id</code>.
     */
    public java.lang.Integer getPollId() {
        return (java.lang.Integer) get(0);
    }

    /**
     * Setter for <code>config.fetchmail_polls.context</code>.
     */
    public void setContext(java.lang.String value) {
        set(1, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.context</code>.
     */
    public java.lang.String getContext() {
        return (java.lang.String) get(1);
    }

    /**
     * Setter for <code>config.fetchmail_polls.host</code>.
     */
    public void setHost(java.lang.String value) {
        set(2, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.host</code>.
     */
    public java.lang.String getHost() {
        return (java.lang.String) get(2);
    }

    /**
     * Setter for <code>config.fetchmail_polls.port</code>.
     */
    public void setPort(java.lang.Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.port</code>.
     */
    public java.lang.Short getPort() {
        return (java.lang.Short) get(3);
    }

    /**
     * Setter for <code>config.fetchmail_polls.protocol</code>.
     */
    public void setProtocol(java.lang.String value) {
        set(4, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.protocol</code>.
     */
    public java.lang.String getProtocol() {
        return (java.lang.String) get(4);
    }

    /**
     * Setter for <code>config.fetchmail_polls.ssl</code>.
     */
    public void setSsl(java.lang.Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.ssl</code>.
     */
    public java.lang.Boolean getSsl() {
        return (java.lang.Boolean) get(5);
    }

    /**
     * Setter for <code>config.fetchmail_polls.remote_user</code>.
     */
    public void setRemoteUser(java.lang.String value) {
        set(6, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.remote_user</code>.
     */
    public java.lang.String getRemoteUser() {
        return (java.lang.String) get(6);
    }

    /**
     * Setter for <code>config.fetchmail_polls.remote_password</code>.
     */
    public void setRemotePassword(java.lang.String value) {
        set(7, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.remote_password</code>.
     */
    public java.lang.String getRemotePassword() {
        return (java.lang.String) get(7);
    }

    /**
     * Setter for <code>config.fetchmail_polls.local_user</code>.
     */
    public void setLocalUser(java.lang.String value) {
        set(8, value);
    }

    /**
     * Getter for <code>config.fetchmail_polls.local_user</code>.
     */
    public java.lang.String getLocalUser() {
        return (java.lang.String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record1<java.lang.Integer> key() {
        return (org.jooq.Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Short, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row9) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Short, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
        return (org.jooq.Row9) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field1() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.POLL_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field2() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.CONTEXT;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field3() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.HOST;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Short> field4() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.PORT;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field5() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.PROTOCOL;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Boolean> field6() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.SSL;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field7() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.REMOTE_USER;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field8() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.REMOTE_PASSWORD;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field9() {
        return com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS.LOCAL_USER;
    }

    @java.lang.Override
    public java.lang.Integer component1() {
        return getPollId();
    }

    @java.lang.Override
    public java.lang.String component2() {
        return getContext();
    }

    @java.lang.Override
    public java.lang.String component3() {
        return getHost();
    }

    @java.lang.Override
    public java.lang.Short component4() {
        return getPort();
    }

    @java.lang.Override
    public java.lang.String component5() {
        return getProtocol();
    }

    @java.lang.Override
    public java.lang.Boolean component6() {
        return getSsl();
    }

    @java.lang.Override
    public java.lang.String component7() {
        return getRemoteUser();
    }

    @java.lang.Override
    public java.lang.String component8() {
        return getRemotePassword();
    }

    @java.lang.Override
    public java.lang.String component9() {
        return getLocalUser();
    }

    @java.lang.Override
    public java.lang.Integer value1() {
        return getPollId();
    }

    @java.lang.Override
    public java.lang.String value2() {
        return getContext();
    }

    @java.lang.Override
    public java.lang.String value3() {
        return getHost();
    }

    @java.lang.Override
    public java.lang.Short value4() {
        return getPort();
    }

    @java.lang.Override
    public java.lang.String value5() {
        return getProtocol();
    }

    @java.lang.Override
    public java.lang.Boolean value6() {
        return getSsl();
    }

    @java.lang.Override
    public java.lang.String value7() {
        return getRemoteUser();
    }

    @java.lang.Override
    public java.lang.String value8() {
        return getRemotePassword();
    }

    @java.lang.Override
    public java.lang.String value9() {
        return getLocalUser();
    }

    @java.lang.Override
    public FetchmailPollsRecord value1(java.lang.Integer value) {
        setPollId(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value2(java.lang.String value) {
        setContext(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value3(java.lang.String value) {
        setHost(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value4(java.lang.Short value) {
        setPort(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value5(java.lang.String value) {
        setProtocol(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value6(java.lang.Boolean value) {
        setSsl(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value7(java.lang.String value) {
        setRemoteUser(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value8(java.lang.String value) {
        setRemotePassword(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord value9(java.lang.String value) {
        setLocalUser(value);
        return this;
    }

    @java.lang.Override
    public FetchmailPollsRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.Short value4, java.lang.String value5, java.lang.Boolean value6, java.lang.String value7, java.lang.String value8, java.lang.String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FetchmailPollsRecord
     */
    public FetchmailPollsRecord() {
        super(com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS);
    }

    /**
     * Create a detached, initialised FetchmailPollsRecord
     */
    public FetchmailPollsRecord(java.lang.Integer pollId, java.lang.String context, java.lang.String host, java.lang.Short port, java.lang.String protocol, java.lang.Boolean ssl, java.lang.String remoteUser, java.lang.String remotePassword, java.lang.String localUser) {
        super(com.sonicle.webtop.core.jooq.config.tables.FetchmailPolls.FETCHMAIL_POLLS);

        setPollId(pollId);
        setContext(context);
        setHost(host);
        setPort(port);
        setProtocol(protocol);
        setSsl(ssl);
        setRemoteUser(remoteUser);
        setRemotePassword(remotePassword);
        setLocalUser(localUser);
    }
}
